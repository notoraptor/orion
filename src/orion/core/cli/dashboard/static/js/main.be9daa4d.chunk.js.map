{"version":3,"sources":["experiments/components/TutorialHeader/index.js","experiments/components/TutorialHeader/TutorialHeader.js","utils/queryServer.js","experiments/BackendContext.js","experiments/components/ExperimentNavBar/ExperimentNavBar.js","experiments/components/ExperimentNavBar/index.js","experiments/content/LandingPage/index.js","experiments/content/LandingPage/LandingPage.js","experiments/content/StatusPage/index.js","experiments/content/StatusPage/StatusPage.js","experiments/content/VisualizationsPage/RegretPlot.js","experiments/content/VisualizationsPage/LocalParameterImportancePlot.js","experiments/content/VisualizationsPage/ParallelCoordinatesPlot.js","experiments/content/VisualizationsPage/VisualizationsPage.js","experiments/content/VisualizationsPage/index.js","experiments/content/DatabasePage/TrialTable.js","experiments/content/DatabasePage/DatabasePage.js","experiments/content/DatabasePage/index.js","experiments/content/ConfigurationPage/index.js","experiments/content/ConfigurationPage/ConfigurationPage.js","experiments/Experiments.js","benchmarks/components/BenchmarkNavBar/BenchmarkNavBar.js","benchmarks/components/BenchmarkNavBar/index.js","benchmarks/content/BenchmarkVisualizationsPage/PlotRender.js","benchmarks/content/BenchmarkVisualizationsPage/index.js","benchmarks/content/BenchmarkVisualizationsPage/BenchmarkVisualizationsPage.js","benchmarks/content/BenchmarkStatusPage/BenchmarkStatusPage.js","benchmarks/content/BenchmarkDatabasePage/TrialTable.js","benchmarks/content/BenchmarkDatabasePage/BenchmarkDatabasePage.js","benchmarks/content/BenchmarkConfigurationPage/BenchmarkConfigurationPage.js","benchmarks/Benchmarks.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","props","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","replace","HeaderMenu","dashboard","menuLinkName","HeaderMenuItem","title","makeRESTCall","path","parameters","resolve","reject","url","keys","Object","length","key","encodeURI","http","get","resp","data","on","chunk","JSON","parse","err","Backend","address","this","baseURL","params","Promise","DEFAULT_BACKEND","window","__ORION_BACKEND__","BackendContext","React","createContext","experiment","settings","ExperimentNavBar","_isMounted","state","experiments","search","onSearch","bind","onUnselect","SideNav","className","isFixedNav","expanded","isChildOfHeader","StructuredList","selection","head","renderExperimentsList","Search","placeholder","labelText","onChange","renderMessageRow","filter","toLowerCase","indexOf","map","label","id","value","name","onSelectExperiment","style","visibility","context","event","ProgressBar","variant","now","message","query","then","results","sort","setState","catch","error","target","inputID","preventDefault","document","getElementById","checked","Component","contextType","LandingPage","StatusPage","config","responsive","RegretConst","layout","useResizeHandler","width","LocalParameterImportancePlot","ParallelCoordinatesPlotConst","PlotGrid","regret","parallel_coordinates","lpi","keyCount","renderRegret","renderParallelCoordinates","renderLPI","loadBackendData","prevProps","prevState","snapshot","backend","promiseRegret","promisePC","promiseLPI","allSettled","resRegret","resPC","resLPI","status","VisualizationsPage","TrialTable","rows","headers","DataTable","getHeaderProps","getRowProps","getTableProps","TableContainer","description","Table","TableHead","TableRow","TableExpandHeader","header","TableHeader","TableBody","row","Fragment","TableExpandRow","cells","cell","TableCell","TableExpandedRow","colSpan","created_on","updatedAt","type","createdAt","issueCount","stars","links","DatabasePage","Date","toLocaleDateString","objective","ConfigurationPage","Experiments","Provider","Content","renderPage","match","page","ExperimentsWithRouter","withRouter","getAlgorithmName","algoDef","Error","stringify","BenchmarkNavBar","onChangeComboBox","onSelectAlgo","onSelectTask","onSelectAssessment","benchmarks","ComboBox","items","itemToString","item","benchmark","renderAssessments","renderTasks","renderAlgorithms","assessments","assessment","indexAssessment","Checkbox","has","tasks","task","indexTask","algorithms","algo","algorithm","indexAlgorithm","selectedItem","onSelectBenchmark","Set","add","delete","PlotData","entry","push","PlotsProvider","plots","a","console","log","response","rawPlots","analysis","plotNames","parsed","undefined","plotData","PLOTS_PROVIDER","PlotRender","join","plot","plotIndex","divId","Event","dispatchEvent","evt","createEvent","initUIEvent","BenchmarkVisualizationsPage","onResize","size","Array","from","Grid","fullWidth","Row","Column","Tile","addEventListener","removeEventListener","divAssessments","plotWidth","offsetWidth","grids","getElementsByClassName","i","grid","nbMaxPlots","columns","iCol","gridWidth","BenchmarkStatusPage","BenchmarkDatabasePage","BenchmarkConfigurationPage","Benchmarks","BenchmarksWithRouter","App","selectExperiments","selectBenchmarks","exact","component","Boolean","location","hostname","client","ApolloClient","uri","authorization","process","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be9daa4d.chunk.js","sourcesContent":["import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderMenu,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  SkipToContent,\n} from 'carbon-components-react';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = props => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Orion Dashboard\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"Oríon\" replace>\n          Dashboard\n        </HeaderName>\n        <HeaderNavigation aria-label=\"Oríon Dashboard\">\n          <HeaderMenu\n            aria-label={\n              props.dashboard === 'experiments'\n                ? 'experiments (selected)'\n                : 'experiments'\n            }\n            menuLinkName=\"Experiments\">\n            <HeaderMenuItem\n              title=\"Go to experiments visualizations\"\n              element={Link}\n              to=\"/visualizations\"\n              replace>\n              Visualizations\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to experiments status\"\n              element={Link}\n              to=\"/status\"\n              replace>\n              Status\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to experiments database\"\n              element={Link}\n              to=\"/database\"\n              replace>\n              Database\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to experiments configuration\"\n              element={Link}\n              to=\"/configuration\"\n              replace>\n              Configuration\n            </HeaderMenuItem>\n          </HeaderMenu>\n          <HeaderMenu\n            aria-label={\n              props.dashboard === 'benchmarks'\n                ? 'benchmarks (selected)'\n                : 'benchmarks'\n            }\n            menuLinkName=\"Benchmarks\">\n            <HeaderMenuItem\n              title=\"Go to benchmarks visualizations\"\n              element={Link}\n              to=\"/benchmarks/visualizations\"\n              replace>\n              Visualizations\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to benchmarks status\"\n              element={Link}\n              to=\"/benchmarks/status\"\n              replace>\n              Status\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to benchmarks database\"\n              element={Link}\n              to=\"/benchmarks/database\"\n              replace>\n              Database\n            </HeaderMenuItem>\n            <HeaderMenuItem\n              title=\"Go to benchmarks configuration\"\n              element={Link}\n              to=\"/benchmarks/configuration\"\n              replace>\n              Configuration\n            </HeaderMenuItem>\n          </HeaderMenu>\n        </HeaderNavigation>\n      </Header>\n    )}\n  />\n);\n\nexport default TutorialHeader;\n","import http from 'http';\n\n/**\n * Make a REST call using GET method and NodeJS builtin `http` module.\n * NB: A `https` module is also available for HTTPS addresses.\n * @param {string} path - address to load\n * @param {Object} parameters - GET parameters\n * @param resolve - function to call on success. Will receive JSON data.\n * @param reject - function to call on error. Will receive raw error object.\n */\nfunction makeRESTCall(path, parameters = {}, resolve, reject) {\n  let url = path;\n  const keys = Object.keys(parameters);\n  if (keys.length) {\n    url += '?';\n    for (let key of keys) {\n      url += `${key}=${encodeURI(parameters[key])}`;\n    }\n  }\n  http\n    .get(url, resp => {\n      let data = '';\n      resp.on('data', chunk => {\n        data += chunk;\n      });\n      resp.on('end', () => {\n        resolve(JSON.parse(data));\n      });\n    })\n    .on('error', err => {\n      reject(err);\n    });\n}\n\n/** Wrapper class to call Orion Web API. */\nexport class Backend {\n  /**\n   * Create a Bckend instance.\n   * @param {string} address - base URL of Orion server\n   */\n  constructor(address) {\n    this.baseURL = address;\n  }\n\n  /**\n   * query backend\n   * @param path - path to load on Orion server. Will be appended to base URL.\n   * @param params - query parameters.\n   * @returns {Promise} - Promise with JSON data on success and raw error otherwise.\n   */\n  query(path, params = {}) {\n    return new Promise((resolve, reject) => {\n      const apiCall = `${this.baseURL}/${path}`;\n      makeRESTCall(apiCall, params, resolve, reject);\n    });\n  }\n}\n\n/** Default address value. */\nexport const DEFAULT_BACKEND = window.__ORION_BACKEND__ || 'http://127.0.0.1:8000';\n","/** React context to store backend (orion server) address, with a default value. */\nimport React from 'react';\nimport { DEFAULT_BACKEND } from '../utils/queryServer';\n\n/** React context. */\nexport const BackendContext = React.createContext({\n  address: DEFAULT_BACKEND,\n  // We use React context to store selected experiment accross pages\n  experiment: null,\n});\n","import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { CloseFilled16 } from '@carbon/icons-react';\nimport { Backend } from '../../../utils/queryServer';\nimport { BackendContext } from '../../BackendContext';\n\nimport {\n  SideNav,\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  Search,\n} from 'carbon-components-react';\n\nimport { settings } from 'carbon-components';\n\nconst { prefix } = settings;\n\nexport class ExperimentNavBar extends React.Component {\n  _isMounted = false;\n  static contextType = BackendContext;\n  constructor(props) {\n    // prop: onSelectExperiment: function(experiment)\n    super(props);\n    this.state = {\n      experiments: null,\n      search: '',\n    };\n    this.onSearch = this.onSearch.bind(this);\n    this.onUnselect = this.onUnselect.bind(this);\n  }\n  render() {\n    return (\n      <SideNav\n        className=\"experiment-navbar\"\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\">\n        <div className=\"experiments-wrapper\">\n          <StructuredListWrapper className=\"experiments-list\" selection>\n            <StructuredListHead>\n              <StructuredListRow head>\n                <StructuredListCell className=\"experiment-cell\" head>\n                  Experiment\n                </StructuredListCell>\n                <StructuredListCell head>Status</StructuredListCell>\n              </StructuredListRow>\n            </StructuredListHead>\n            <StructuredListBody>\n              {this.renderExperimentsList()}\n            </StructuredListBody>\n          </StructuredListWrapper>\n        </div>\n        <Search\n          placeholder=\"Search experiment\"\n          labelText=\"Search experiment\"\n          onChange={this.onSearch}\n        />\n      </SideNav>\n    );\n  }\n  renderExperimentsList() {\n    if (this.state.experiments === null)\n      return this.renderMessageRow('Loading experiments ...');\n    if (!this.state.experiments.length)\n      return this.renderMessageRow('No experiment available');\n    // Apply search.\n    let experiments;\n    if (this.state.search.length) {\n      // String to search\n      experiments = this.state.experiments.filter(\n        experiment => experiment.toLowerCase().indexOf(this.state.search) >= 0\n      );\n      if (!experiments.length)\n        return this.renderMessageRow('No matching experiment');\n    } else {\n      // No string to search, display all experiments\n      experiments = this.state.experiments;\n    }\n    return experiments.map(experiment => (\n      <StructuredListRow label key={`row-${experiment}`}>\n        <StructuredListInput\n          id={`select-experiment-${experiment}`}\n          value={`row-${experiment}`}\n          title={`row-${experiment}`}\n          name=\"select-experiment\"\n          onChange={() => this.props.onSelectExperiment(experiment)}\n        />\n        <StructuredListCell className=\"experiment-cell\">\n          <span\n            title={`unselect experiment '${experiment}'`}\n            style={{\n              visibility:\n                this.context.experiment === experiment ? 'visible' : 'hidden',\n            }}\n            onClick={event =>\n              this.onUnselect(\n                event,\n                experiment,\n                `select-experiment-${experiment}`\n              )\n            }>\n            <CloseFilled16\n              className={`${prefix}--structured-list-svg`}\n              aria-label=\"unselect experiment\">\n              <title>unselect experiment</title>\n            </CloseFilled16>\n          </span>{' '}\n          <span title={experiment}>{experiment}</span>\n        </StructuredListCell>\n        <StructuredListCell>\n          <ProgressBar>\n            <ProgressBar variant=\"success\" now={35} key={1} />\n            <ProgressBar variant=\"warning\" now={20} key={2} />\n            <ProgressBar variant=\"danger\" now={10} key={3} />\n            <ProgressBar variant=\"info\" now={15} key={4} />\n          </ProgressBar>\n        </StructuredListCell>\n      </StructuredListRow>\n    ));\n  }\n  renderMessageRow(message) {\n    return (\n      <StructuredListRow>\n        <StructuredListCell>{message}</StructuredListCell>\n        <StructuredListCell />\n      </StructuredListRow>\n    );\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    const backend = new Backend(this.context.address);\n    backend\n      .query('experiments')\n      .then(results => {\n        const experiments = results.map(experiment => experiment.name);\n        experiments.sort();\n        if (this._isMounted) {\n          this.setState({ experiments });\n        }\n      })\n      .catch(error => {\n        if (this._isMounted) {\n          this.setState({ experiments: [] });\n        }\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onSearch(event) {\n    this.setState({ search: (event.target.value || '').toLowerCase() });\n  }\n  onUnselect(event, experiment, inputID) {\n    /*\n     * By default, a click anywhere in experiment line (including on cross icon)\n     * will select the experiment.\n     * Here, we want to click on cross icon to deselect experiment.\n     * So, we must prevent click on cross icon to act like click on experiment\n     * line.\n     * To do that, we call event's preventDefault() method to cancel default\n     * behavior.\n     * */\n    event.preventDefault();\n    /*\n     * Uncheck hidden radiobutton input associated to selected experiment.\n     * This is necessary to allow to immediately click again to experiment\n     * line to re-select experiment.\n     * */\n    document.getElementById(inputID).checked = false;\n    /*\n     * Tell global interface to unselect experiment\n     * */\n    this.props.onSelectExperiment(null);\n  }\n}\n\nexport default ExperimentNavBar;\n","import ExperimentNavBar from './ExperimentNavBar';\nexport default ExperimentNavBar;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\n\nconst LandingPage = () => {\n  return (\n    <>\n      <h4>Landing Page</h4>\n    </>\n  );\n};\n\nexport default LandingPage;\n","import StatusPage from './StatusPage';\nexport default StatusPage;\n","import React from 'react';\n\nconst StatusPage = () => {\n  return <div>Status page</div>;\n};\n\nexport default StatusPage;\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nconst config = {\n  responsive: true,\n};\n\nexport function RegretConst(props) {\n  return (\n    <Plot\n      id=\"regret-plot\"\n      data={props.data}\n      layout={props.layout}\n      config={config}\n      useResizeHandler={true}\n      style={{ width: '100%' }}\n    />\n  );\n}\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nconst config = {\n  responsive: true,\n};\n\nexport const LocalParameterImportancePlot = props => {\n  return (\n    <Plot\n      id=\"lpi-plot\"\n      data={props.data}\n      layout={props.layout}\n      config={config}\n      useResizeHandler={true}\n      style={{ width: '100%' }}\n    />\n  );\n};\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nconst config = {\n  responsive: true,\n};\n\nexport function ParallelCoordinatesPlotConst(props) {\n  return (\n    <Plot\n      id=\"parallel-coordinates-plot\"\n      data={props.data}\n      layout={props.layout}\n      config={config}\n      useResizeHandler={true}\n      style={{ width: '100%' }}\n    />\n  );\n}\n","import React from 'react';\nimport { RegretConst } from './RegretPlot';\nimport { LocalParameterImportancePlot } from './LocalParameterImportancePlot';\nimport { ParallelCoordinatesPlotConst } from './ParallelCoordinatesPlot';\nimport { BackendContext } from '../../BackendContext';\nimport { Backend } from '../../../utils/queryServer';\n\nclass PlotGrid extends React.Component {\n  // Use BackendContext to retrieve current selected experiment.\n  static contextType = BackendContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      experiment: null,\n      regret: false,\n      parallel_coordinates: false,\n      lpi: false,\n      keyCount: 0, // key to force re-rendering\n    };\n  }\n  render() {\n    return (\n      <div className=\"bx--grid bx--grid--full-width\" key={this.state.keyCount}>\n        <div className=\"bx--row\">\n          <div className=\"bx--col-sm-16 bx--col-md-8 bx--col-lg-8 bx--col-xlg-8\">\n            <div className=\"bx--tile plot-tile\">{this.renderRegret()}</div>\n          </div>\n          <div className=\"bx--col-sm-16 bx--col-md-8 bx--col-lg-8 bx--col-xlg-8\">\n            <div className=\"bx--tile plot-tile\">\n              {this.renderParallelCoordinates()}\n            </div>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col-sm-16 bx--col-md-8 bx--col-lg-8 bx--col-xlg-8\">\n            <div className=\"bx--tile plot-tile\">{this.renderLPI()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  renderRegret() {\n    if (this.state.regret === null)\n      return `Loading regret plot for: ${this.state.experiment} ...`;\n    if (this.state.regret === false) return `Nothing to display`;\n    return (\n      <RegretConst\n        data={this.state.regret.data}\n        layout={this.state.regret.layout}\n      />\n    );\n  }\n  renderParallelCoordinates() {\n    if (this.state.parallel_coordinates === null)\n      return `Loading parallel coordinates plot for: ${\n        this.state.experiment\n      } ...`;\n    if (this.state.parallel_coordinates === false) return 'Nothing to display';\n    return (\n      <ParallelCoordinatesPlotConst\n        data={this.state.parallel_coordinates.data}\n        layout={this.state.parallel_coordinates.layout}\n      />\n    );\n  }\n  renderLPI() {\n    if (this.state.lpi === null)\n      return `Loading LPI plot for: ${this.state.experiment} ...`;\n    if (this.state.lpi === false) return 'Nothing to display';\n    return (\n      <LocalParameterImportancePlot\n        data={this.state.lpi.data}\n        layout={this.state.lpi.layout}\n      />\n    );\n  }\n  componentDidMount() {\n    // We must check if there is an experiment to visualize\n    const experiment = this.context.experiment;\n    if (experiment !== null) {\n      this.loadBackendData(experiment);\n    }\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // We must check if selected experiment changed\n    const experiment = this.context.experiment;\n    if (this.state.experiment !== experiment) {\n      if (experiment === null) {\n        this.setState({\n          experiment,\n          regret: false,\n          parallel_coordinates: false,\n          lpi: false,\n        });\n      } else {\n        this.loadBackendData(experiment);\n      }\n    }\n  }\n  loadBackendData(experiment) {\n    // Load experiments data for plotting\n    this.setState(\n      { experiment, regret: null, parallel_coordinates: null, lpi: null },\n      () => {\n        const backend = new Backend(this.context.address);\n        const promiseRegret = backend.query(`plots/regret/${experiment}`);\n        const promisePC = backend.query(\n          `plots/parallel_coordinates/${experiment}`\n        );\n        const promiseLPI = backend.query(`plots/lpi/${experiment}`);\n        Promise.allSettled([promiseRegret, promisePC, promiseLPI]).then(\n          results => {\n            const [resRegret, resPC, resLPI] = results;\n            const regret =\n              resRegret.status === 'fulfilled' ? resRegret.value : false;\n            const parallel_coordinates =\n              resPC.status === 'fulfilled' ? resPC.value : false;\n            const lpi = resLPI.status === 'fulfilled' ? resLPI.value : false;\n            const keyCount = this.state.keyCount + 1;\n            this.setState({\n              experiment,\n              regret,\n              parallel_coordinates,\n              lpi,\n              keyCount,\n            });\n          }\n        );\n      }\n    );\n  }\n}\n\nconst VisualizationsPage = PlotGrid;\n\nexport default VisualizationsPage;\n","import VisualizationsPage from './VisualizationsPage';\nexport default VisualizationsPage;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst TrialTable = ({ rows, headers }) => {\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Experiment Trials\"\n          description=\"Trials of selected experiments.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>TODO: Trial detailed configuration</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default TrialTable;\n","import React from 'react';\n\nimport TrialTable from './TrialTable';\n\nconst headers = [\n  {\n    key: 'id',\n    header: 'ID',\n  },\n  {\n    key: 'experiment',\n    header: 'Experiment',\n  },\n  {\n    key: 'status',\n    header: 'Status',\n  },\n  {\n    key: 'created_on',\n    header: 'Created',\n  },\n  {\n    key: 'params',\n    header: 'Parameters',\n  },\n  {\n    key: 'objective',\n    header: 'Objective',\n  },\n];\n\nconst rows = [\n  {\n    id: '1',\n    experiment: '1',\n    status: 'Completed',\n    created_on: '2020-12-01 05:05:05',\n    updatedAt: 'Date',\n    params: [],\n    results: [{ type: 'objective', name: 'loss', value: 1 }],\n  },\n  {\n    id: '2',\n    name: 'Repo 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Repo 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    id: row.id,\n    experiment: row.experiment,\n    status: row.status,\n    created_on: new Date(row.created_on).toLocaleDateString(),\n    params: 'dunno',\n    objective: 'bad',\n  }));\n\nconst DatabasePage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter database-page\">\n      <div className=\"bx--row database-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <TrialTable headers={headers} rows={getRowItems(rows)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DatabasePage;\n","import DatabasePage from './DatabasePage';\nexport default DatabasePage;\n","import ConfigurationPage from './ConfigurationPage';\nexport default ConfigurationPage;\n","import React from 'react';\n\nconst ConfigurationPage = () => {\n  return <div>Configuration page</div>;\n};\n\nexport default ConfigurationPage;\n","import React, { Component } from 'react';\nimport { Content } from 'carbon-components-react';\nimport TutorialHeader from './components/TutorialHeader';\nimport ExperimentNavBar from './components/ExperimentNavBar';\nimport LandingPage from './content/LandingPage';\nimport StatusPage from './content/StatusPage';\nimport VisualizationsPage from './content/VisualizationsPage';\nimport DatabasePage from './content/DatabasePage';\nimport ConfigurationPage from './content/ConfigurationPage';\nimport { BackendContext } from './BackendContext';\nimport { DEFAULT_BACKEND } from '../utils/queryServer';\nimport { withRouter } from 'react-router-dom';\n\nclass Experiments extends Component {\n  constructor(props) {\n    super(props);\n    // Store selected experiment here\n    this.state = { experiment: null };\n    this.onSelectExperiment = this.onSelectExperiment.bind(this);\n  }\n  render() {\n    return (\n      <>\n        <BackendContext.Provider\n          value={{\n            address: DEFAULT_BACKEND,\n            // Pass selected experiment as React context\n            // so that it is available in route components\n            experiment: this.state.experiment,\n          }}>\n          <TutorialHeader dashboard=\"experiments\" />\n          <ExperimentNavBar onSelectExperiment={this.onSelectExperiment} />\n          <Content>{this.renderPage()}</Content>\n        </BackendContext.Provider>\n      </>\n    );\n  }\n  renderPage() {\n    switch (this.props.match.params.page || 'landing') {\n      case 'landing':\n        return <LandingPage />;\n      case 'status':\n        return <StatusPage />;\n      case 'visualizations':\n        return <VisualizationsPage />;\n      case 'database':\n        return <DatabasePage />;\n      case 'configuration':\n        return <ConfigurationPage />;\n      default:\n        break;\n    }\n  }\n  onSelectExperiment(experiment) {\n    this.setState({ experiment });\n  }\n}\n\nexport const ExperimentsWithRouter = withRouter(Experiments);\n","import React from 'react';\nimport {\n  SideNav,\n  Checkbox,\n  StructuredListWrapper,\n  StructuredListRow,\n  StructuredListCell,\n  ComboBox,\n} from 'carbon-components-react';\n\nfunction getAlgorithmName(algoDef) {\n  if (typeof algoDef === 'string') return algoDef;\n  const keys = Object.keys(algoDef);\n  if (keys.length === 1) return keys[0];\n  else\n    throw new Error(\n      `Cannot get algorithm name from object: ${JSON.stringify(algoDef)}`\n    );\n}\n\nexport class BenchmarkNavBar extends React.Component {\n  constructor(props) {\n    // props:\n    // benchmarks: list of JSON objects representing benchmarks\n    // benchmark: JSON object representing a benchmark\n    // algorithms: set of strings\n    // tasks: set of strings\n    // assessments: set of strings\n    super(props);\n    this.onChangeComboBox = this.onChangeComboBox.bind(this);\n    this.onSelectAlgo = this.onSelectAlgo.bind(this);\n    this.onSelectTask = this.onSelectTask.bind(this);\n    this.onSelectAssessment = this.onSelectAssessment.bind(this);\n  }\n  render() {\n    return this.props.benchmarks === null ? (\n      ''\n    ) : (\n      <SideNav\n        className=\"benchmark-navbar\"\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\">\n        <ComboBox\n          onChange={this.onChangeComboBox}\n          id={'combobox-benchmark'}\n          items={this.props.benchmarks}\n          itemToString={item => (item === null ? null : item.name)}\n          placeholder={'Search a benchmark ...'}\n        />\n        {this.props.benchmark === null ? (\n          ''\n        ) : (\n          <StructuredListWrapper>\n            {this.renderAssessments()}\n            {this.renderTasks()}\n            {this.renderAlgorithms()}\n          </StructuredListWrapper>\n        )}\n      </SideNav>\n    );\n  }\n  renderAssessments() {\n    const benchmark = this.props.benchmark;\n    const assessments = Object.keys(benchmark.assessments);\n    assessments.sort();\n    return (\n      <>\n        <StructuredListRow>\n          <StructuredListCell>\n            <strong>Assessments</strong>\n          </StructuredListCell>\n        </StructuredListRow>\n        {assessments.map((assessment, indexAssessment) => (\n          <StructuredListRow key={indexAssessment}>\n            <StructuredListCell>\n              <Checkbox\n                labelText={assessment}\n                id={`assessment-${indexAssessment}`}\n                checked={this.props.assessments.has(assessment)}\n                onChange={(checked, id, event) =>\n                  this.onSelectAssessment(assessment, checked)\n                }\n              />\n            </StructuredListCell>\n          </StructuredListRow>\n        ))}\n      </>\n    );\n  }\n  renderTasks() {\n    const benchmark = this.props.benchmark;\n    const tasks = Object.keys(benchmark.tasks);\n    tasks.sort();\n    return (\n      <>\n        <StructuredListRow>\n          <StructuredListCell>\n            <strong>Tasks</strong>\n          </StructuredListCell>\n        </StructuredListRow>\n        {tasks.map((task, indexTask) => (\n          <StructuredListRow key={indexTask}>\n            <StructuredListCell>\n              <Checkbox\n                labelText={task}\n                id={`task-${indexTask}`}\n                checked={this.props.tasks.has(task)}\n                onChange={(checked, id, event) =>\n                  this.onSelectTask(task, checked)\n                }\n              />\n            </StructuredListCell>\n          </StructuredListRow>\n        ))}\n      </>\n    );\n  }\n  renderAlgorithms() {\n    const benchmark = this.props.benchmark;\n    const algorithms = benchmark.algorithms.map(algo => getAlgorithmName(algo));\n    algorithms.sort();\n    return (\n      <>\n        <StructuredListRow>\n          <StructuredListCell>\n            <strong>Algorithms</strong>\n          </StructuredListCell>\n        </StructuredListRow>\n        {algorithms.map((algorithm, indexAlgorithm) => (\n          <StructuredListRow key={indexAlgorithm}>\n            <StructuredListCell>\n              <Checkbox\n                labelText={algorithm}\n                id={`algorithm-${indexAlgorithm}`}\n                checked={this.props.algorithms.has(algorithm)}\n                onChange={(checked, id, event) =>\n                  this.onSelectAlgo(algorithm, checked)\n                }\n              />\n            </StructuredListCell>\n          </StructuredListRow>\n        ))}\n      </>\n    );\n  }\n  onChangeComboBox(event) {\n    const benchmark = event.selectedItem;\n    if (benchmark === null) {\n      this.props.onSelectBenchmark(benchmark, new Set(), new Set(), new Set());\n    } else {\n      const algorithms = benchmark.algorithms.map(algo =>\n        getAlgorithmName(algo)\n      );\n      this.props.onSelectBenchmark(\n        benchmark,\n        new Set(algorithms),\n        new Set(Object.keys(benchmark.tasks)),\n        new Set(Object.keys(benchmark.assessments))\n      );\n    }\n  }\n  onSelectAlgo(algorithm, checked) {\n    const algorithms = new Set(this.props.algorithms);\n    if (checked) algorithms.add(algorithm);\n    else algorithms.delete(algorithm);\n    this.props.onSelectBenchmark(\n      this.props.benchmark,\n      algorithms,\n      this.props.tasks,\n      this.props.assessments\n    );\n  }\n  onSelectTask(task, checked) {\n    const tasks = new Set(this.props.tasks);\n    if (checked) tasks.add(task);\n    else tasks.delete(task);\n    this.props.onSelectBenchmark(\n      this.props.benchmark,\n      this.props.algorithms,\n      tasks,\n      this.props.assessments\n    );\n  }\n  onSelectAssessment(assessment, checked) {\n    const assessments = new Set(this.props.assessments);\n    if (checked) assessments.add(assessment);\n    else assessments.delete(assessment);\n    this.props.onSelectBenchmark(\n      this.props.benchmark,\n      this.props.algorithms,\n      this.props.tasks,\n      assessments\n    );\n  }\n}\n\nexport default BenchmarkNavBar;\n","import BenchmarkNavBar from './BenchmarkNavBar';\nexport default BenchmarkNavBar;\n","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport { DEFAULT_BACKEND } from '../../../utils/queryServer';\nimport { Backend } from '../../../utils/queryServer';\n\nclass PlotData {\n  constructor(name, data, layout) {\n    this.name = name;\n    this.data = data;\n    this.layout = layout;\n  }\n\n  get(algorithms) {\n    const data = [];\n    for (let entry of this.data) {\n      for (let algorithm of algorithms) {\n        if (\n          entry.name.indexOf(algorithm) === 0 ||\n          entry.name.indexOf(`${algorithm}_`) === 0\n        ) {\n          data.push(entry);\n        }\n      }\n    }\n    return { data, layout: this.layout, name: this.name };\n  }\n}\n\nclass PlotsProvider {\n  constructor(address) {\n    this.backend = new Backend(address);\n    this.plots = {};\n  }\n  async get(benchmark, assessment, task, algorithms) {\n    /**@type {Array<PlotData>}*/\n    let plots = ((this.plots[benchmark] || {})[assessment] || {})[task] || [];\n    if (!plots.length) {\n      const query = `benchmarks/${benchmark}?assessment=${assessment}&task=${task}`;\n      console.log(`Loading: ${this.backend.baseURL}/${query}`);\n      const response = await this.backend.query(query);\n      const rawPlots = response.analysis[assessment][task];\n      const plotNames = Object.keys(rawPlots);\n      plotNames.sort();\n      for (let name of plotNames) {\n        const parsed = JSON.parse(rawPlots[name]);\n        plots.push(new PlotData(name, parsed.data, parsed.layout));\n      }\n      if (this.plots[benchmark] === undefined) this.plots[benchmark] = {};\n      if (this.plots[benchmark][assessment] === undefined)\n        this.plots[benchmark][assessment] = {};\n      if (this.plots[benchmark][assessment][task] === undefined)\n        this.plots[benchmark][assessment][task] = plots;\n    }\n    return plots.map(plotData => plotData.get(algorithms));\n  }\n}\nconst PLOTS_PROVIDER = new PlotsProvider(DEFAULT_BACKEND);\n\nexport class PlotRender extends React.Component {\n  // Control variable to avoid setting state if component was unmounted before an asynchronous API call finished.\n  _isMounted = false;\n  constructor(props) {\n    // props:\n    // benchmark: str\n    // assessment: str\n    // task: str\n    // algorithms: list of strings\n    super(props);\n    this.state = {\n      plots: null,\n    };\n  }\n  render() {\n    if (this.state.plots === null)\n      return `Loading plots for assessment: ${this.props.assessment}, task: ${\n        this.props.task\n      }, algorithms: ${this.props.algorithms.join(', ')}`;\n    if (this.state.plots === false)\n      return (\n        <strong>{`Unable to load plots for assessment: ${\n          this.props.assessment\n        }, task: ${this.props.task}, algorithms: ${this.props.algorithms.join(\n          ', '\n        )}`}</strong>\n      );\n    return (\n      <div className=\"orion-plots\">\n        {this.state.plots.map((plot, plotIndex) => {\n          const id = `plot-${this.props.benchmark}-${this.props.assessment}-${\n            this.props.task\n          }-${plot.name}-${this.props.algorithms.join('-')}`;\n          return (\n            <Plot\n              className=\"orion-plot\"\n              key={id}\n              divId={id}\n              data={plot.data}\n              layout={plot.layout}\n              config={{ responsive: true }}\n              useResizeHandler={true}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    PLOTS_PROVIDER.get(\n      this.props.benchmark,\n      this.props.assessment,\n      this.props.task,\n      this.props.algorithms\n    )\n      .then(plots => {\n        if (this._isMounted) {\n          this.setState({ plots });\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        if (this._isMounted) this.setState({ plots: false });\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Trigger a window resize event to force displayed plots to resize correctly.\n    // Reference (2022/03/24): https://stackoverflow.com/a/43846782\n    if (typeof Event === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      var evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n}\n","import BenchmarkVisualizationsPage from './BenchmarkVisualizationsPage';\nexport default BenchmarkVisualizationsPage;\n","import React from 'react';\nimport { PlotRender } from './PlotRender';\nimport { Tile, Grid, Row, Column } from 'carbon-components-react';\n\nexport default class BenchmarkVisualizationsPage extends React.Component {\n  /**\n   * Props:\n   * benchmark: JSON object representing a benchmark\n   * algorithms: set of strings\n   * tasks: set of strings\n   * assessments: set of strings\n   */\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n  }\n  render() {\n    if (this.props.benchmark === null) {\n      return (\n        <div>\n          <h4 className=\"title-visualizations\">No benchmark selected</h4>\n        </div>\n      );\n    }\n    if (!this.props.assessments.size) {\n      return (\n        <div>\n          <h4 className=\"title-visualizations\">No assessment selected</h4>\n        </div>\n      );\n    }\n    if (!this.props.tasks.size) {\n      return (\n        <div>\n          <h4 className=\"title-visualizations\">No task selected</h4>\n        </div>\n      );\n    }\n    if (!this.props.algorithms.size) {\n      return (\n        <div>\n          <h4 className=\"title-visualizations\">No algorithm selected</h4>\n        </div>\n      );\n    }\n    const assessments = Array.from(this.props.assessments);\n    const tasks = Array.from(this.props.tasks);\n    const algorithms = Array.from(this.props.algorithms);\n    assessments.sort();\n    tasks.sort();\n    algorithms.sort();\n    /**\n     * Key to hash current VisualizationPage properties.\n     * Used to force re-rendering of all plots each time any option is (de)selected,\n     * and then make sure each plot is entirely redrawn, preventing any graphical bug.\n     * As plots are cached after first API call, forcing a redraw is not so-much time-consuming.\n     * @type {string}\n     */\n    const prefix = `viz-${this.props.benchmark.name}-${assessments.join(\n      '-'\n    )}-${tasks.join('-')}-${algorithms.join('-')}`;\n    return (\n      <div>\n        <h4 className=\"title-visualizations\">Assessments</h4>\n        <div className=\"assessments\" id=\"assessments\">\n          {assessments.map((assessment, indexAssessment) => (\n            <Grid\n              fullWidth\n              className=\"assessment\"\n              key={`assessment-${assessment}`}>\n              <Row>\n                <Column>\n                  <Tile className=\"plot-tile\">\n                    <strong>\n                      <em>{assessment}</em>\n                    </strong>\n                  </Tile>\n                </Column>\n              </Row>\n              {tasks.map((task, indexTask) => (\n                <Row key={`task-${task}`}>\n                  <Column\n                    key={`task-${task}-assessment-${assessment}`}\n                    className=\"orion-column\">\n                    <Tile className=\"plot-tile\">\n                      <PlotRender\n                        key={`${prefix}-plots-${\n                          this.props.benchmark.name\n                        }-${assessment}-${task}-${algorithms.join('-')}`}\n                        benchmark={this.props.benchmark.name}\n                        assessment={assessment}\n                        task={task}\n                        algorithms={algorithms}\n                      />\n                    </Tile>\n                  </Column>\n                </Row>\n              ))}\n            </Grid>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    // Make sure to resize grids when page is mounted.\n    this.onResize();\n    // Make sure to resize grids when window is resized.\n    window.addEventListener('resize', this.onResize);\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Make sure to resize grids everytime page is updated.\n    this.onResize();\n  }\n  componentWillUnmount() {\n    // Remove ebent listener.\n    window.removeEventListener('resize', this.onResize);\n  }\n  onResize() {\n    // Get grids div.\n    const divAssessments = document.getElementById('assessments');\n    if (!divAssessments) return;\n    const width = divAssessments.offsetWidth;\n    // Set plot width to grids div / nb. grids\n    const plotWidth = width / this.props.assessments.size;\n    // Set grid width for each grid\n    const grids = divAssessments.getElementsByClassName('assessment');\n    for (let i = 0; i < grids.length; ++i) {\n      const grid = grids[i];\n      // Grid width must be plot width * max nb. of plots displayed in a column.\n      // We must then get max number of plots in a column.\n      let nbMaxPlots = 1;\n      const columns = grid.getElementsByClassName('orion-column');\n      for (let iCol = 0; iCol < columns.length; ++iCol) {\n        const column = columns[iCol];\n        const plots = column.getElementsByClassName('orion-plot');\n        if (nbMaxPlots < plots.length) nbMaxPlots = plots.length;\n      }\n      const gridWidth = plotWidth * nbMaxPlots;\n      grid.style.width = `${gridWidth}px`;\n    }\n  }\n}\n","import React from 'react';\n\nexport const BenchmarkStatusPage = () => {\n  return <div>Benchmarks status page</div>;\n};\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst TrialTable = ({ rows, headers }) => {\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Experiment Trials\"\n          description=\"Trials of selected experiments.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>TODO: Trial detailed configuration</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default TrialTable;\n","import React from 'react';\n\nimport TrialTable from './TrialTable';\n\nconst headers = [\n  {\n    key: 'id',\n    header: 'ID',\n  },\n  {\n    key: 'experiment',\n    header: 'Experiment',\n  },\n  {\n    key: 'status',\n    header: 'Status',\n  },\n  {\n    key: 'created_on',\n    header: 'Created',\n  },\n  {\n    key: 'params',\n    header: 'Parameters',\n  },\n  {\n    key: 'objective',\n    header: 'Objective',\n  },\n];\n\nconst rows = [\n  {\n    id: '1',\n    experiment: '1',\n    status: 'Completed',\n    created_on: '2020-12-01 05:05:05',\n    updatedAt: 'Date',\n    params: [],\n    results: [{ type: 'objective', name: 'loss', value: 1 }],\n  },\n  {\n    id: '2',\n    name: 'Repo 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Repo 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    id: row.id,\n    experiment: row.experiment,\n    status: row.status,\n    created_on: new Date(row.created_on).toLocaleDateString(),\n    params: 'dunno',\n    objective: 'bad',\n  }));\n\nexport const BenchmarkDatabasePage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter database-page\">\n      <div className=\"bx--row database-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <TrialTable headers={headers} rows={getRowItems(rows)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const BenchmarkConfigurationPage = () => {\n  return <div>Benchmarks configuration page</div>;\n};\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react';\nimport BenchmarkNavBar from './components/BenchmarkNavBar';\nimport BenchmarkVisualizationsPage from './content/BenchmarkVisualizationsPage';\nimport { BenchmarkStatusPage } from './content/BenchmarkStatusPage/BenchmarkStatusPage';\nimport { BenchmarkDatabasePage } from './content/BenchmarkDatabasePage/BenchmarkDatabasePage';\nimport { BenchmarkConfigurationPage } from './content/BenchmarkConfigurationPage/BenchmarkConfigurationPage';\nimport TutorialHeader from '../experiments/components/TutorialHeader';\n\nimport { DEFAULT_BACKEND } from '../utils/queryServer';\nimport { Backend } from '../utils/queryServer';\nimport { withRouter } from 'react-router-dom';\n\nclass Benchmarks extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    // Store selected experiment here\n    this.state = {\n      benchmarks: null,\n      benchmark: null,\n      algorithms: null,\n      tasks: null,\n      assessments: null,\n    };\n    this.onSelectBenchmark = this.onSelectBenchmark.bind(this);\n  }\n  render() {\n    return (\n      <>\n        <TutorialHeader dashboard=\"benchmarks\" />\n        {this.state.benchmarks === null ? (\n          <Content>\n            <h4>Loading benchmarks ...</h4>\n          </Content>\n        ) : this.state.benchmarks.length === 0 ? (\n          <Content>\n            <h4>No benchmarks available</h4>\n          </Content>\n        ) : (\n          <>\n            <BenchmarkNavBar\n              benchmarks={this.state.benchmarks}\n              benchmark={this.state.benchmark}\n              algorithms={this.state.algorithms}\n              tasks={this.state.tasks}\n              assessments={this.state.assessments}\n              onSelectBenchmark={this.onSelectBenchmark}\n            />\n            <Content>{this.renderPage()}</Content>\n          </>\n        )}\n      </>\n    );\n  }\n  renderPage() {\n    switch (this.props.match.params.page || 'visualizations') {\n      case 'status':\n        return <BenchmarkStatusPage />;\n      case 'database':\n        return <BenchmarkDatabasePage />;\n      case 'configuration':\n        return <BenchmarkConfigurationPage />;\n      case 'visualizations':\n        return (\n          <BenchmarkVisualizationsPage\n            benchmark={this.state.benchmark}\n            algorithms={this.state.algorithms}\n            tasks={this.state.tasks}\n            assessments={this.state.assessments}\n          />\n        );\n      default:\n        break;\n    }\n  }\n  componentDidMount() {\n    this._isMounted = true;\n    const backend = new Backend(DEFAULT_BACKEND);\n    backend\n      .query('benchmarks')\n      .then(benchmarks => {\n        if (this._isMounted) {\n          this.setState({ benchmarks });\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        if (this._isMounted) {\n          this.setState({ benchmarks: [] });\n        }\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  onSelectBenchmark(benchmark, algorithms, tasks, assessments) {\n    this.setState({ benchmark, algorithms, tasks, assessments });\n  }\n}\n\nexport const BenchmarksWithRouter = withRouter(Benchmarks);\n","import React, { Component } from 'react';\nimport { ExperimentsWithRouter } from './experiments/Experiments';\nimport { BenchmarksWithRouter } from './benchmarks/Benchmarks';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Store selected experiment here\n    this.state = { page: null };\n    this.selectExperiments = this.selectExperiments.bind(this);\n    this.selectBenchmarks = this.selectBenchmarks.bind(this);\n  }\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ExperimentsWithRouter} />\n        <Route exact path=\"/benchmarks\" component={BenchmarksWithRouter} />\n        <Route\n          exact\n          path=\"/benchmarks/:page\"\n          component={BenchmarksWithRouter}\n        />\n        <Route path=\"/:page\" component={ExperimentsWithRouter} />\n      </Switch>\n    );\n  }\n  selectExperiments() {\n    this.setState({ page: 'experiments' });\n  }\n  selectBenchmarks() {\n    this.setState({ page: 'benchmarks' });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    authorization: `Bearer ${\n      process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n    }`,\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}